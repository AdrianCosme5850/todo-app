{"ast":null,"code":"/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign } from \"tslib\";\nimport * as React from \"react\";\nimport { Classes, DISPLAYNAME_PREFIX } from \"../../common\";\nimport { Button } from \"../button/buttons\";\nimport { Text } from \"../text/text\";\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport var PanelView2 = function (props) {\n  var handleClose = React.useCallback(function () {\n    return props.onClose(props.panel);\n  }, [props.onClose, props.panel]);\n  var maybeBackButton = props.previousPanel === undefined ? null : React.createElement(Button, {\n    \"aria-label\": \"Back\",\n    className: Classes.PANEL_STACK_HEADER_BACK,\n    icon: \"chevron-left\",\n    minimal: true,\n    onClick: handleClose,\n    small: true,\n    text: props.previousPanel.title,\n    title: props.previousPanel.htmlTitle\n  });\n  // `props.panel.renderPanel` is simply a function that returns a JSX.Element. It may be an FC which\n  // uses hooks. In order to avoid React errors due to inconsistent hook calls, we must encapsulate\n  // those hooks with their own lifecycle through a very simple wrapper component.\n  var PanelWrapper = React.useMemo(function () {\n    return function () {\n      // N.B. A type cast is required because of error TS2345, where technically `panel.props` could be\n      // instantiated with a type unrelated to our generic constraint `T` here. We know\n      // we're sending the right values here though, and it makes the consumer API for this\n      // component type safe, so it's ok to do this...\n      return props.panel.renderPanel(__assign({\n        closePanel: handleClose,\n        openPanel: props.onOpen\n      }, props.panel.props));\n    };\n  }, [props.panel, props.onOpen]);\n  return React.createElement(\"div\", {\n    className: Classes.PANEL_STACK2_VIEW\n  }, props.showHeader && React.createElement(\"div\", {\n    className: Classes.PANEL_STACK2_HEADER\n  }, React.createElement(\"span\", null, maybeBackButton), React.createElement(Text, {\n    className: Classes.HEADING,\n    ellipsize: true,\n    title: props.panel.htmlTitle\n  }, props.panel.title), React.createElement(\"span\", null)), React.createElement(PanelWrapper, null));\n};\nPanelView2.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".PanelView2\");","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,OAAO,EAAEC,kBAAkB,QAAQ,cAAc;AAC1D,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,IAAI,QAAQ,cAAc;AAiCnC;AACA,OAAO,IAAMC,UAAU,GAAwB,UAA0BC,KAAyB;EAC9F,IAAMC,WAAW,GAAGP,KAAK,CAACQ,WAAW,CAAC;IAAM,YAAK,CAACC,OAAO,CAACH,KAAK,CAACI,KAAK,CAAC;EAA1B,CAA0B,EAAE,CAACJ,KAAK,CAACG,OAAO,EAAEH,KAAK,CAACI,KAAK,CAAC,CAAC;EAErG,IAAMC,eAAe,GACjBL,KAAK,CAACM,aAAa,KAAKC,SAAS,GAAG,IAAI,GACpCb,oBAACG,MAAM;IAAA,cACQ,MAAM;IACjBW,SAAS,EAAEb,OAAO,CAACc,uBAAuB;IAC1CC,IAAI,EAAC,cAAc;IACnBC,OAAO,EAAE,IAAI;IACbC,OAAO,EAAEX,WAAW;IACpBY,KAAK,EAAE,IAAI;IACXC,IAAI,EAAEd,KAAK,CAACM,aAAa,CAACS,KAAK;IAC/BA,KAAK,EAAEf,KAAK,CAACM,aAAa,CAACU;EAAS,EAE3C;EAEL;EACA;EACA;EACA,IAAMC,YAAY,GAAavB,KAAK,CAACwB,OAAO,CACxC;IAAM;MACF;MACA;MACA;MACA;MACA,YAAK,CAACd,KAAK,CAACe,WAAW,CAACC;QACpBC,UAAU,EAAEpB,WAAW;QACvBqB,SAAS,EAAEtB,KAAK,CAACuB;MAAM,GACpBvB,KAAK,CAACI,KAAK,CAACJ,KAAK,CACN,CAAC;IAJnB,CAImB;EATjB,CASiB,EACvB,CAACA,KAAK,CAACI,KAAK,EAAEJ,KAAK,CAACuB,MAAM,CAAC,CAC9B;EAED,OACI7B;IAAKc,SAAS,EAAEb,OAAO,CAAC6B;EAAiB,GACpCxB,KAAK,CAACyB,UAAU,IACb/B;IAAKc,SAAS,EAAEb,OAAO,CAAC+B;EAAmB,GAEvChC,kCAAOW,eAAe,CAAQ,EAC9BX,oBAACI,IAAI;IAACU,SAAS,EAAEb,OAAO,CAACgC,OAAO;IAAEC,SAAS,EAAE,IAAI;IAAEb,KAAK,EAAEf,KAAK,CAACI,KAAK,CAACY;EAAS,GAC1EhB,KAAK,CAACI,KAAK,CAACW,KAAK,CACf,EACPrB,iCAAQ,CAEf,EACDA,oBAACuB,YAAY,OAAG,CACd;AAEd,CAAC;AACDlB,UAAU,CAAC8B,WAAW,GAAG,UAAGjC,kBAAkB,gBAAa","names":["React","Classes","DISPLAYNAME_PREFIX","Button","Text","PanelView2","props","handleClose","useCallback","onClose","panel","maybeBackButton","previousPanel","undefined","className","PANEL_STACK_HEADER_BACK","icon","minimal","onClick","small","text","title","htmlTitle","PanelWrapper","useMemo","renderPanel","__assign","closePanel","openPanel","onOpen","PANEL_STACK2_VIEW","showHeader","PANEL_STACK2_HEADER","HEADING","ellipsize","displayName"],"sourceRoot":"","sources":["../../../../src/components/panel-stack2/panelView2.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}