{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { DISPLAYNAME_PREFIX, InputGroup, Overlay } from \"@blueprintjs/core\";\nimport { Classes } from \"../../common\";\nimport { QueryList } from \"../query-list/queryList\";\nvar Omnibar = /** @class */function (_super) {\n  __extends(Omnibar, _super);\n  function Omnibar() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.renderQueryList = function (listProps) {\n      var _a = _this.props,\n        _b = _a.inputProps,\n        inputProps = _b === void 0 ? {} : _b,\n        isOpen = _a.isOpen,\n        _c = _a.overlayProps,\n        overlayProps = _c === void 0 ? {} : _c;\n      var handleKeyDown = listProps.handleKeyDown,\n        handleKeyUp = listProps.handleKeyUp;\n      var handlers = isOpen ? {\n        onKeyDown: handleKeyDown,\n        onKeyUp: handleKeyUp\n      } : {};\n      return React.createElement(Overlay, __assign({\n        hasBackdrop: true\n      }, overlayProps, {\n        isOpen: isOpen,\n        className: classNames(Classes.OMNIBAR_OVERLAY, overlayProps.className),\n        onClose: _this.handleOverlayClose\n      }), React.createElement(\"div\", __assign({\n        className: classNames(Classes.OMNIBAR, listProps.className)\n      }, handlers), React.createElement(InputGroup, __assign({\n        autoFocus: true,\n        large: true,\n        leftIcon: \"search\",\n        placeholder: \"Search...\"\n      }, inputProps, {\n        onChange: listProps.handleQueryChange,\n        value: listProps.query\n      })), listProps.itemList));\n    };\n    _this.handleOverlayClose = function (event) {\n      var _a, _b, _c, _d;\n      (_b = (_a = _this.props.overlayProps) === null || _a === void 0 ? void 0 : _a.onClose) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n      (_d = (_c = _this.props).onClose) === null || _d === void 0 ? void 0 : _d.call(_c, event);\n    };\n    return _this;\n  }\n  Omnibar.ofType = function () {\n    return Omnibar;\n  };\n  Omnibar.prototype.render = function () {\n    // omit props specific to this component, spread the rest.\n    var _a = this.props,\n      isOpen = _a.isOpen,\n      inputProps = _a.inputProps,\n      overlayProps = _a.overlayProps,\n      restProps = __rest(_a, [\"isOpen\", \"inputProps\", \"overlayProps\"]);\n    var initialContent = \"initialContent\" in this.props ? this.props.initialContent : null;\n    return React.createElement(QueryList, __assign({}, restProps, {\n      initialContent: initialContent,\n      renderer: this.renderQueryList\n    }));\n  };\n  Omnibar.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Omnibar\");\n  return Omnibar;\n}(React.PureComponent);\nexport { Omnibar };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAASC,kBAAkB,EAAEC,UAAU,EAAoBC,OAAO,QAAsB,mBAAmB;AAE3G,SAASC,OAAO,QAAwB,cAAc;AACtD,SAASC,SAAS,QAAgC,yBAAyB;AAmC3E;EAAgCC;EAAhC;IAAA;IAeYC,qBAAe,GAAG,UAACC,SAAoC;MACrD,SAAiDD,KAAI,CAACE,KAAK;QAAzDC,kBAAe;QAAfC,UAAU,mBAAG,EAAE;QAAEC,MAAM;QAAEC,oBAAiB;QAAjBC,YAAY,mBAAG,EAAE,KAAe;MACzD,iBAAa,GAAkBN,SAAS,cAA3B;QAAEO,WAAW,GAAKP,SAAS,YAAd;MAClC,IAAMQ,QAAQ,GAAGJ,MAAM,GAAG;QAAEK,SAAS,EAAEC,aAAa;QAAEC,OAAO,EAAEJ;MAAW,CAAE,GAAG,EAAE;MAEjF,OACIf,oBAACG,OAAO;QACJiB,WAAW,EAAE;MAAI,GACbN,YAAY;QAChBF,MAAM,EAAEA,MAAM;QACdS,SAAS,EAAEtB,UAAU,CAACK,OAAO,CAACkB,eAAe,EAAER,YAAY,CAACO,SAAS,CAAC;QACtEE,OAAO,EAAEhB,KAAI,CAACiB;MAAkB,IAEhCxB;QAAKqB,SAAS,EAAEtB,UAAU,CAACK,OAAO,CAACqB,OAAO,EAAEjB,SAAS,CAACa,SAAS;MAAC,GAAML,QAAQ,GAC1EhB,oBAACE,UAAU;QACPwB,SAAS,EAAE,IAAI;QACfC,KAAK,EAAE,IAAI;QACXC,QAAQ,EAAC,QAAQ;QACjBC,WAAW,EAAC;MAAW,GACnBlB,UAAU;QACdmB,QAAQ,EAAEtB,SAAS,CAACuB,iBAAiB;QACrCC,KAAK,EAAExB,SAAS,CAACyB;MAAK,GACxB,EACDzB,SAAS,CAAC0B,QAAQ,CACjB,CACA;IAElB,CAAC;IAEO3B,wBAAkB,GAAG,UAAC4B,KAAwC;;MAClE,iBAAI,CAAC1B,KAAK,CAACK,YAAY,0CAAES,OAAO,mDAAGY,KAAK,CAAC;MACzC,iBAAI,CAAC1B,KAAK,EAACc,OAAO,mDAAGY,KAAK,CAAC;IAC/B,CAAC;;EACL;EA7CkBC,cAAM,GAApB;IACI,OAAOA,OAAqD;EAChE,CAAC;EAEMA,wBAAM,GAAb;IACI;IACA,IAAMC,KAAqD,IAAI,CAAC5B,KAAK;MAA7DG,MAAM;MAAED,UAAU;MAAEG,YAAY;MAAKwB,SAAS,cAAhD,wCAAkD,CAAa;IACrE,IAAMC,cAAc,GAAG,gBAAgB,IAAI,IAAI,CAAC9B,KAAK,GAAG,IAAI,CAACA,KAAK,CAAC8B,cAAc,GAAG,IAAI;IAExF,OAAOvC,oBAACK,SAAS,eAAQiC,SAAS;MAAEC,cAAc,EAAEA,cAAc;MAAEC,QAAQ,EAAE,IAAI,CAACC;IAAe,GAAI;EAC1G,CAAC;EAZaL,mBAAW,GAAG,UAAGnC,kBAAkB,aAAU;EA+C/D,cAAC;CAAA,CAhD+BD,KAAK,CAAC0C,aAAa;SAAtCN,OAAO","names":["classNames","React","DISPLAYNAME_PREFIX","InputGroup","Overlay","Classes","QueryList","__extends","_this","listProps","props","_b","inputProps","isOpen","_c","overlayProps","handleKeyUp","handlers","onKeyDown","handleKeyDown","onKeyUp","hasBackdrop","className","OMNIBAR_OVERLAY","onClose","handleOverlayClose","OMNIBAR","autoFocus","large","leftIcon","placeholder","onChange","handleQueryChange","value","query","itemList","event","Omnibar","_a","restProps","initialContent","renderer","renderQueryList","PureComponent"],"sourceRoot":"","sources":["../../../../src/components/omnibar/omnibar.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}