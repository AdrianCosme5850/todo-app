{"ast":null,"code":"/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Popper placement utils\n// ======================\n/** Converts a full placement to one of the four positions by stripping text after the `-`. */\nexport function getBasePlacement(placement) {\n  return placement.split(\"-\")[0];\n}\n/** Returns true if position is left or right. */\nexport function isVerticalPlacement(side) {\n  return [\"left\", \"right\"].indexOf(side) !== -1;\n}\n/** Returns the opposite position. */\nexport function getOppositePlacement(side) {\n  switch (side) {\n    case \"top\":\n      return \"bottom\";\n    case \"left\":\n      return \"right\";\n    case \"bottom\":\n      return \"top\";\n    default:\n      return \"left\";\n  }\n}\n/** Returns the CSS alignment keyword corresponding to given placement. */\nexport function getAlignment(placement) {\n  var align = placement.split(\"-\")[1];\n  switch (align) {\n    case \"start\":\n      return \"left\";\n    case \"end\":\n      return \"right\";\n    default:\n      return \"center\";\n  }\n}\n// Popper modifiers\n// ================\n/** Modifier helper function to compute popper transform-origin based on arrow position */\nexport function getTransformOrigin(placement, arrowStyles) {\n  var basePlacement = getBasePlacement(placement);\n  if (arrowStyles === undefined) {\n    return isVerticalPlacement(basePlacement) ? \"\".concat(getOppositePlacement(basePlacement), \" \").concat(getAlignment(basePlacement)) : \"\".concat(getAlignment(basePlacement), \" \").concat(getOppositePlacement(basePlacement));\n  } else {\n    // const arrowSizeShift = state.elements.arrow.clientHeight / 2;\n    var arrowSizeShift = 30 / 2;\n    // can use keyword for dimension without the arrow, to ease computation burden.\n    // move origin by half arrow's height to keep it centered.\n    return isVerticalPlacement(basePlacement) ? \"\".concat(getOppositePlacement(basePlacement), \" \").concat(parseInt(arrowStyles.top, 10) + arrowSizeShift, \"px\") : \"\".concat(parseInt(arrowStyles.left, 10) + arrowSizeShift, \"px \").concat(getOppositePlacement(basePlacement));\n  }\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;AAkBA;AACA;AAEA;AACA,OAAM,SAAUA,gBAAgB,CAACC,SAAoB;EACjD,OAAOA,SAAS,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAkB;AACnD;AAEA;AACA,OAAM,SAAUC,mBAAmB,CAACC,IAAmB;EACnD,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAACC,OAAO,CAACD,IAAI,CAAC,KAAK,CAAC,CAAC;AACjD;AAEA;AACA,OAAM,SAAUE,oBAAoB,CAACF,IAAmB;EACpD,QAAQA,IAAI;IACR,KAAK,KAAK;MACN,OAAO,QAAQ;IACnB,KAAK,MAAM;MACP,OAAO,OAAO;IAClB,KAAK,QAAQ;MACT,OAAO,KAAK;IAChB;MACI,OAAO,MAAM;EAAC;AAE1B;AAEA;AACA,OAAM,SAAUG,YAAY,CAACN,SAAoB;EAC7C,IAAMO,KAAK,GAAGP,SAAS,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAgC;EACpE,QAAQM,KAAK;IACT,KAAK,OAAO;MACR,OAAO,MAAM;IACjB,KAAK,KAAK;MACN,OAAO,OAAO;IAClB;MACI,OAAO,QAAQ;EAAC;AAE5B;AAEA;AACA;AAEA;AACA,OAAM,SAAUC,kBAAkB,CAACR,SAAoB,EAAES,WAAsD;EAC3G,IAAMC,aAAa,GAAGX,gBAAgB,CAACC,SAAS,CAAC;EACjD,IAAIS,WAAW,KAAKE,SAAS,EAAE;IAC3B,OAAOT,mBAAmB,CAACQ,aAAa,CAAC,GACnC,UAAGL,oBAAoB,CAACK,aAAa,CAAC,cAAIJ,YAAY,CAACI,aAAa,CAAC,CAAE,GACvE,UAAGJ,YAAY,CAACI,aAAa,CAAC,cAAIL,oBAAoB,CAACK,aAAa,CAAC,CAAE;GAChF,MAAM;IACH;IACA,IAAME,cAAc,GAAG,EAAE,GAAG,CAAC;IAC7B;IACA;IACA,OAAOV,mBAAmB,CAACQ,aAAa,CAAC,GACnC,UAAGL,oBAAoB,CAACK,aAAa,CAAC,cAAIG,QAAQ,CAACJ,WAAW,CAACK,GAAG,EAAE,EAAE,CAAC,GAAGF,cAAc,OAAI,GAC5F,UAAGC,QAAQ,CAACJ,WAAW,CAACM,IAAI,EAAE,EAAE,CAAC,GAAGH,cAAc,gBAAMP,oBAAoB,CAACK,aAAa,CAAC,CAAE;;AAE3G","names":["getBasePlacement","placement","split","isVerticalPlacement","side","indexOf","getOppositePlacement","getAlignment","align","getTransformOrigin","arrowStyles","basePlacement","undefined","arrowSizeShift","parseInt","top","left"],"sourceRoot":"","sources":["../../src/utils.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}