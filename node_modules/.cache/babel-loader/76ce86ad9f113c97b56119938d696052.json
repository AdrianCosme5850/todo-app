{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\n// we need some empty interfaces to show up in docs\n// HACKHACK: these components should go in separate files\n/* eslint-disable max-classes-per-file, @typescript-eslint/no-empty-interface */\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractPureComponent2, Classes, refHandler, setRef } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\n/**\n * Renders common control elements, with additional props to customize appearance.\n * This component is not exported and is only used in this file for `Checkbox`, `Radio`, and `Switch` below.\n */\nvar Control = function (_a) {\n  var _b;\n  var alignIndicator = _a.alignIndicator,\n    children = _a.children,\n    className = _a.className,\n    indicatorChildren = _a.indicatorChildren,\n    inline = _a.inline,\n    inputRef = _a.inputRef,\n    label = _a.label,\n    labelElement = _a.labelElement,\n    large = _a.large,\n    style = _a.style,\n    type = _a.type,\n    typeClassName = _a.typeClassName,\n    _c = _a.tagName,\n    tagName = _c === void 0 ? \"label\" : _c,\n    htmlProps = __rest(_a, [\"alignIndicator\", \"children\", \"className\", \"indicatorChildren\", \"inline\", \"inputRef\", \"label\", \"labelElement\", \"large\", \"style\", \"type\", \"typeClassName\", \"tagName\"]);\n  var classes = classNames(Classes.CONTROL, typeClassName, (_b = {}, _b[Classes.DISABLED] = htmlProps.disabled, _b[Classes.INLINE] = inline, _b[Classes.LARGE] = large, _b), Classes.alignmentClass(alignIndicator), className);\n  return React.createElement(tagName, {\n    className: classes,\n    style: style\n  }, React.createElement(\"input\", __assign({}, htmlProps, {\n    ref: inputRef,\n    type: type\n  })), React.createElement(\"span\", {\n    className: Classes.CONTROL_INDICATOR\n  }, indicatorChildren), label, labelElement, children);\n};\nvar Switch = /** @class */function (_super) {\n  __extends(Switch, _super);\n  function Switch() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Switch.prototype.render = function () {\n    var _a = this.props,\n      innerLabelChecked = _a.innerLabelChecked,\n      innerLabel = _a.innerLabel,\n      controlProps = __rest(_a, [\"innerLabelChecked\", \"innerLabel\"]);\n    var switchLabels = innerLabel || innerLabelChecked ? [React.createElement(\"div\", {\n      key: \"checked\",\n      className: Classes.CONTROL_INDICATOR_CHILD\n    }, React.createElement(\"div\", {\n      className: Classes.SWITCH_INNER_TEXT\n    }, innerLabelChecked ? innerLabelChecked : innerLabel)), React.createElement(\"div\", {\n      key: \"unchecked\",\n      className: Classes.CONTROL_INDICATOR_CHILD\n    }, React.createElement(\"div\", {\n      className: Classes.SWITCH_INNER_TEXT\n    }, innerLabel))] : null;\n    return React.createElement(Control, __assign({}, controlProps, {\n      type: \"checkbox\",\n      typeClassName: Classes.SWITCH,\n      indicatorChildren: switchLabels\n    }));\n  };\n  Switch.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Switch\");\n  return Switch;\n}(AbstractPureComponent2);\nexport { Switch };\nvar Radio = /** @class */function (_super) {\n  __extends(Radio, _super);\n  function Radio() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  Radio.prototype.render = function () {\n    return React.createElement(Control, __assign({}, this.props, {\n      type: \"radio\",\n      typeClassName: Classes.RADIO\n    }));\n  };\n  Radio.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Radio\");\n  return Radio;\n}(AbstractPureComponent2);\nexport { Radio };\nvar Checkbox = /** @class */function (_super) {\n  __extends(Checkbox, _super);\n  function Checkbox() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.state = {\n      indeterminate: _this.props.indeterminate || _this.props.defaultIndeterminate || false\n    };\n    // must maintain internal reference for `indeterminate` support\n    _this.input = null;\n    _this.handleInputRef = refHandler(_this, \"input\", _this.props.inputRef);\n    _this.handleChange = function (evt) {\n      var _a, _b;\n      var indeterminate = evt.target.indeterminate;\n      // update state immediately only if uncontrolled\n      if (_this.props.indeterminate == null) {\n        _this.setState({\n          indeterminate: indeterminate\n        });\n      }\n      // otherwise wait for props change. always invoke handler.\n      (_b = (_a = _this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, evt);\n    };\n    return _this;\n  }\n  Checkbox.getDerivedStateFromProps = function (_a) {\n    var indeterminate = _a.indeterminate;\n    // put props into state if controlled by props\n    if (indeterminate != null) {\n      return {\n        indeterminate: indeterminate\n      };\n    }\n    return null;\n  };\n  Checkbox.prototype.render = function () {\n    var _a = this.props,\n      defaultIndeterminate = _a.defaultIndeterminate,\n      indeterminate = _a.indeterminate,\n      controlProps = __rest(_a, [\"defaultIndeterminate\", \"indeterminate\"]);\n    return React.createElement(Control, __assign({}, controlProps, {\n      inputRef: this.handleInputRef,\n      onChange: this.handleChange,\n      type: \"checkbox\",\n      typeClassName: Classes.CHECKBOX\n    }));\n  };\n  Checkbox.prototype.componentDidMount = function () {\n    this.updateIndeterminate();\n  };\n  Checkbox.prototype.componentDidUpdate = function (prevProps) {\n    this.updateIndeterminate();\n    if (prevProps.inputRef !== this.props.inputRef) {\n      setRef(prevProps.inputRef, null);\n      this.handleInputRef = refHandler(this, \"input\", this.props.inputRef);\n      setRef(this.props.inputRef, this.input);\n    }\n  };\n  Checkbox.prototype.updateIndeterminate = function () {\n    if (this.input != null) {\n      this.input.indeterminate = this.state.indeterminate;\n    }\n  };\n  Checkbox.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Checkbox\");\n  return Checkbox;\n}(AbstractPureComponent2);\nexport { Checkbox };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AAEA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAASC,sBAAsB,EAAaC,OAAO,EAAEC,UAAU,EAAEC,MAAM,QAAQ,cAAc;AAC7F,SAASC,kBAAkB,QAA+B,oBAAoB;AA2E9E;;;;AAIA,IAAMC,OAAO,GAAoC,UAACC,EAejD;;EAdG,kBAAc;IACdC,QAAQ;IACRC,SAAS;IACTC,iBAAiB;IACjBC,MAAM;IACNC,QAAQ;IACRC,KAAK;IACLC,YAAY;IACZC,KAAK;IACLC,KAAK;IACLC,IAAI;IACJC,aAAa;IACbC,eAAiB;IAAjBC,OAAO,mBAAG,OAAO;IACdC,SAAS,cAdkC,qKAejD,CADe;EAEZ,IAAMC,OAAO,GAAGvB,UAAU,CACtBG,OAAO,CAACqB,OAAO,EACfL,aAAa,YAETM,GAACtB,OAAO,CAACuB,QAAQ,IAAGJ,SAAS,CAACK,QAAQ,EACtCF,GAACtB,OAAO,CAACyB,MAAM,IAAGhB,MAAM,EACxBa,GAACtB,OAAO,CAAC0B,KAAK,IAAGb,KAAK,OAE1Bb,OAAO,CAAC2B,cAAc,CAACC,cAAc,CAAC,EACtCrB,SAAS,CACZ;EAED,OAAOT,KAAK,CAAC+B,aAAa,CACtBX,OAAO,EACP;IAAEX,SAAS,EAAEa,OAAO;IAAEN,KAAK;EAAA,CAAE,EAC7BhB,0CAAWqB,SAAS;IAAEW,GAAG,EAAEpB,QAAQ;IAAEK,IAAI,EAAEA;EAAI,GAAI,EACnDjB;IAAMS,SAAS,EAAEP,OAAO,CAAC+B;EAAiB,GAAGvB,iBAAiB,CAAQ,EACtEG,KAAK,EACLC,YAAY,EACZN,QAAQ,CACX;AACL,CAAC;AAyBD;EAA4B0B;EAA5B;;EA2BA;EAxBWC,uBAAM,GAAb;IACI,IAAM5B,KAAqD,IAAI,CAAC6B,KAAK;MAA7DC,iBAAiB;MAAEC,UAAU;MAAKC,YAAY,cAAhD,mCAAkD,CAAa;IACrE,IAAMC,YAAY,GACdF,UAAU,IAAID,iBAAiB,GACzB,CACIrC;MAAKyC,GAAG,EAAC,SAAS;MAAChC,SAAS,EAAEP,OAAO,CAACwC;IAAuB,GACzD1C;MAAKS,SAAS,EAAEP,OAAO,CAACyC;IAAiB,GACpCN,iBAAiB,GAAGA,iBAAiB,GAAGC,UAAU,CACjD,CACJ,EACNtC;MAAKyC,GAAG,EAAC,WAAW;MAAChC,SAAS,EAAEP,OAAO,CAACwC;IAAuB,GAC3D1C;MAAKS,SAAS,EAAEP,OAAO,CAACyC;IAAiB,GAAGL,UAAU,CAAO,CAC3D,CACT,GACD,IAAI;IACd,OACItC,oBAACM,OAAO,eACAiC,YAAY;MAChBtB,IAAI,EAAC,UAAU;MACfC,aAAa,EAAEhB,OAAO,CAAC0C,MAAM;MAC7BlC,iBAAiB,EAAE8B;IAAY,GACjC;EAEV,CAAC;EAzBaL,kBAAW,GAAG,UAAG9B,kBAAkB,YAAS;EA0B9D,aAAC;CAAA,CA3B2BJ,sBAAsB;SAArCkC,MAAM;AAsCnB;EAA2BD;EAA3B;;EAMA;EAHWW,sBAAM,GAAb;IACI,OAAO7C,oBAACM,OAAO,eAAK,IAAI,CAAC8B,KAAK;MAAEnB,IAAI,EAAC,OAAO;MAACC,aAAa,EAAEhB,OAAO,CAAC4C;IAAK,GAAI;EACjF,CAAC;EAJaD,iBAAW,GAAG,UAAGxC,kBAAkB,WAAQ;EAK7D,YAAC;CAAA,CAN0BJ,sBAAsB;SAApC4C,KAAK;AAmClB;EAA8BX;EAA9B;IAAA;IAYWa,WAAK,GAAmB;MAC3BC,aAAa,EAAED,KAAI,CAACX,KAAK,CAACY,aAAa,IAAID,KAAI,CAACX,KAAK,CAACa,oBAAoB,IAAI;KACjF;IAED;IACOF,WAAK,GAA4B,IAAI;IAEpCA,oBAAc,GAAgC5C,UAAU,CAAC4C,KAAI,EAAE,OAAO,EAAEA,KAAI,CAACX,KAAK,CAACxB,QAAQ,CAAC;IAkC5FmC,kBAAY,GAAG,UAACG,GAAwC;;MACpD,iBAAa,GAAKA,GAAG,CAACC,MAAM,cAAf;MACrB;MACA,IAAIJ,KAAI,CAACX,KAAK,CAACY,aAAa,IAAI,IAAI,EAAE;QAClCD,KAAI,CAACK,QAAQ,CAAC;UAAEJ,aAAa;QAAA,CAAE,CAAC;;MAEpC;MACA,iBAAI,CAACZ,KAAK,EAACiB,QAAQ,mDAAGH,GAAG,CAAC;IAC9B,CAAC;;EACL;EA3DkBI,iCAAwB,GAAtC,UAAuC/C,EAAgC;QAA9ByC,aAAa;IAClD;IACA,IAAIA,aAAa,IAAI,IAAI,EAAE;MACvB,OAAO;QAAEA,aAAa;MAAA,CAAE;;IAG5B,OAAO,IAAI;EACf,CAAC;EAWMM,yBAAM,GAAb;IACI,IAAM/C,KAA2D,IAAI,CAAC6B,KAAK;MAAnEa,oBAAoB;MAAED,aAAa;MAAKT,YAAY,cAAtD,yCAAwD,CAAa;IAC3E,OACIvC,oBAACM,OAAO,eACAiC,YAAY;MAChB3B,QAAQ,EAAE,IAAI,CAAC2C,cAAc;MAC7BF,QAAQ,EAAE,IAAI,CAACG,YAAY;MAC3BvC,IAAI,EAAC,UAAU;MACfC,aAAa,EAAEhB,OAAO,CAACuD;IAAQ,GACjC;EAEV,CAAC;EAEMH,oCAAiB,GAAxB;IACI,IAAI,CAACI,mBAAmB,EAAE;EAC9B,CAAC;EAEMJ,qCAAkB,GAAzB,UAA0BK,SAAwB;IAC9C,IAAI,CAACD,mBAAmB,EAAE;IAC1B,IAAIC,SAAS,CAAC/C,QAAQ,KAAK,IAAI,CAACwB,KAAK,CAACxB,QAAQ,EAAE;MAC5CR,MAAM,CAACuD,SAAS,CAAC/C,QAAQ,EAAE,IAAI,CAAC;MAChC,IAAI,CAAC2C,cAAc,GAAGpD,UAAU,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAACiC,KAAK,CAACxB,QAAQ,CAAC;MACpER,MAAM,CAAC,IAAI,CAACgC,KAAK,CAACxB,QAAQ,EAAE,IAAI,CAACgD,KAAK,CAAC;;EAE/C,CAAC;EAEON,sCAAmB,GAA3B;IACI,IAAI,IAAI,CAACM,KAAK,IAAI,IAAI,EAAE;MACpB,IAAI,CAACA,KAAK,CAACZ,aAAa,GAAG,IAAI,CAACa,KAAK,CAACb,aAAa;;EAE3D,CAAC;EAlDaM,oBAAW,GAAG,UAAGjD,kBAAkB,cAAW;EA6DhE,eAAC;CAAA,CA9D6BJ,sBAAsB;SAAvCqD,QAAQ","names":["classNames","React","AbstractPureComponent2","Classes","refHandler","setRef","DISPLAYNAME_PREFIX","Control","_a","children","className","indicatorChildren","inline","inputRef","label","labelElement","large","style","type","typeClassName","_c","tagName","htmlProps","classes","CONTROL","_b","DISABLED","disabled","INLINE","LARGE","alignmentClass","alignIndicator","createElement","ref","CONTROL_INDICATOR","__extends","Switch","props","innerLabelChecked","innerLabel","controlProps","switchLabels","key","CONTROL_INDICATOR_CHILD","SWITCH_INNER_TEXT","SWITCH","Radio","RADIO","_this","indeterminate","defaultIndeterminate","evt","target","setState","onChange","Checkbox","handleInputRef","handleChange","CHECKBOX","updateIndeterminate","prevProps","input","state"],"sourceRoot":"","sources":["../../../../src/components/forms/controls.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}