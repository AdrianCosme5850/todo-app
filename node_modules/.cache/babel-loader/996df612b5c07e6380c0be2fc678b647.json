{"ast":null,"code":"/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign } from \"tslib\";\nexport var DISPLAYNAME_PREFIX = \"Blueprint4\";\n/** A collection of curated prop keys used across our Components which are not valid HTMLElement props. */\nvar INVALID_PROPS = [\"active\", \"alignText\", \"asyncControl\", \"containerRef\", \"current\", \"elementRef\", \"fill\", \"icon\", \"inputRef\", \"intent\", \"inline\", \"large\", \"loading\", \"leftElement\", \"leftIcon\", \"minimal\", \"onRemove\", \"outlined\", \"panel\", \"panelClassName\", \"popoverProps\", \"rightElement\", \"rightIcon\", \"round\", \"small\", \"tagName\", \"text\"];\n/**\n * Typically applied to HTMLElements to filter out disallowed props. When applied to a Component,\n * can filter props from being passed down to the children. Can also filter by a combined list of\n * supplied prop keys and the denylist (only appropriate for HTMLElements).\n *\n * @param props The original props object to filter down.\n * @param {string[]} invalidProps If supplied, overwrites the default denylist.\n * @param {boolean} shouldMerge If true, will merge supplied invalidProps and denylist together.\n */\nexport function removeNonHTMLProps(props, invalidProps, shouldMerge) {\n  if (invalidProps === void 0) {\n    invalidProps = INVALID_PROPS;\n  }\n  if (shouldMerge === void 0) {\n    shouldMerge = false;\n  }\n  if (shouldMerge) {\n    invalidProps = invalidProps.concat(INVALID_PROPS);\n  }\n  return invalidProps.reduce(function (prev, curr) {\n    // Props with hyphens (e.g. data-*) are always considered html props\n    if (curr.indexOf(\"-\") !== -1) {\n      return prev;\n    }\n    if (prev.hasOwnProperty(curr)) {\n      delete prev[curr];\n    }\n    return prev;\n  }, __assign({}, props));\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAsBA,OAAO,IAAMA,kBAAkB,GAAG,YAAY;AAkI9C;AACA,IAAMC,aAAa,GAAG,CAClB,QAAQ,EACR,WAAW,EACX,cAAc,EACd,cAAc,EACd,SAAS,EACT,YAAY,EACZ,MAAM,EACN,MAAM,EACN,UAAU,EACV,QAAQ,EACR,QAAQ,EACR,OAAO,EACP,SAAS,EACT,aAAa,EACb,UAAU,EACV,SAAS,EACT,UAAU,EACV,UAAU,EACV,OAAO,EACP,gBAAgB,EAChB,cAAc,EACd,cAAc,EACd,WAAW,EACX,OAAO,EACP,OAAO,EACP,SAAS,EACT,MAAM,CACT;AAED;;;;;;;;;AASA,OAAM,SAAUC,kBAAkB,CAC9BC,KAA6B,EAC7BC,YAA4B,EAC5BC,WAAmB;EADnB;IAAAD,4BAA4B;EAAA;EAC5B;IAAAC,mBAAmB;EAAA;EAEnB,IAAIA,WAAW,EAAE;IACbD,YAAY,GAAGA,YAAY,CAACE,MAAM,CAACL,aAAa,CAAC;;EAGrD,OAAOG,YAAY,CAACG,MAAM,CACtB,UAACC,IAAI,EAAEC,IAAI;IACP;IACA,IAAIA,IAAI,CAACC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;MAC1B,OAAOF,IAAI;;IAGf,IAAIA,IAAI,CAACG,cAAc,CAACF,IAAI,CAAC,EAAE;MAC3B,OAAQD,IAAY,CAACC,IAAI,CAAC;;IAE9B,OAAOD,IAAI;EACf,CAAC,eACIL,KAAK,EACb;AACL","names":["DISPLAYNAME_PREFIX","INVALID_PROPS","removeNonHTMLProps","props","invalidProps","shouldMerge","concat","reduce","prev","curr","indexOf","hasOwnProperty"],"sourceRoot":"","sources":["../../../src/common/props.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}