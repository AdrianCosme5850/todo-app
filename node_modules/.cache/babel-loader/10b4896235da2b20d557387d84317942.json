{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractPureComponent2, Classes, DISPLAYNAME_PREFIX, Utils } from \"../../common\";\nimport { isReactNodeEmpty } from \"../../common/utils\";\nimport { Icon, IconSize } from \"../icon/icon\";\nimport { Text } from \"../text/text\";\nvar Tag = /** @class */function (_super) {\n  __extends(Tag, _super);\n  function Tag() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.onRemoveClick = function (e) {\n      var _a, _b;\n      (_b = (_a = _this.props).onRemove) === null || _b === void 0 ? void 0 : _b.call(_a, e, _this.props);\n    };\n    return _this;\n  }\n  Tag.prototype.render = function () {\n    var _a;\n    var _b = this.props,\n      active = _b.active,\n      children = _b.children,\n      className = _b.className,\n      fill = _b.fill,\n      icon = _b.icon,\n      intent = _b.intent,\n      interactive = _b.interactive,\n      large = _b.large,\n      minimal = _b.minimal,\n      multiline = _b.multiline,\n      onRemove = _b.onRemove,\n      rightIcon = _b.rightIcon,\n      round = _b.round,\n      _c = _b.tabIndex,\n      tabIndex = _c === void 0 ? 0 : _c,\n      htmlTitle = _b.htmlTitle,\n      elementRef = _b.elementRef,\n      htmlProps = __rest(_b, [\"active\", \"children\", \"className\", \"fill\", \"icon\", \"intent\", \"interactive\", \"large\", \"minimal\", \"multiline\", \"onRemove\", \"rightIcon\", \"round\", \"tabIndex\", \"htmlTitle\", \"elementRef\"]);\n    var isRemovable = Utils.isFunction(onRemove);\n    var tagClasses = classNames(Classes.TAG, Classes.intentClass(intent), (_a = {}, _a[Classes.ACTIVE] = active, _a[Classes.FILL] = fill, _a[Classes.INTERACTIVE] = interactive, _a[Classes.LARGE] = large, _a[Classes.MINIMAL] = minimal, _a[Classes.ROUND] = round, _a), className);\n    var isLarge = large || tagClasses.indexOf(Classes.LARGE) >= 0;\n    var removeButton = isRemovable ? React.createElement(\"button\", {\n      \"aria-label\": \"Remove Tag\",\n      type: \"button\",\n      className: Classes.TAG_REMOVE,\n      onClick: this.onRemoveClick,\n      tabIndex: interactive ? tabIndex : undefined\n    }, React.createElement(Icon, {\n      icon: \"small-cross\",\n      size: isLarge ? IconSize.LARGE : IconSize.STANDARD\n    })) : null;\n    return React.createElement(\"span\", __assign({}, htmlProps, {\n      className: tagClasses,\n      tabIndex: interactive ? tabIndex : undefined,\n      ref: elementRef\n    }), React.createElement(Icon, {\n      icon: icon\n    }), !isReactNodeEmpty(children) && React.createElement(Text, {\n      className: Classes.FILL,\n      ellipsize: !multiline,\n      tagName: \"span\",\n      title: htmlTitle\n    }, children), React.createElement(Icon, {\n      icon: rightIcon\n    }), removeButton);\n  };\n  Tag.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Tag\");\n  return Tag;\n}(AbstractPureComponent2);\nexport { Tag };","map":{"version":3,"mappings":"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","names":["classNames","React","AbstractPureComponent2","Classes","DISPLAYNAME_PREFIX","Utils","isReactNodeEmpty","Icon","IconSize","Text","__extends","_this","e","props","onRemove","Tag","_b","active","children","className","fill","icon","intent","interactive","large","minimal","multiline","rightIcon","round","_c","tabIndex","htmlTitle","elementRef","htmlProps","isRemovable","isFunction","tagClasses","TAG","intentClass","_a","ACTIVE","FILL","INTERACTIVE","LARGE","MINIMAL","ROUND","isLarge","indexOf","removeButton","type","TAG_REMOVE","onClick","onRemoveClick","undefined","size","STANDARD","ref","ellipsize","tagName","title"],"sourceRoot":"","sources":["../../../../src/components/tag/tag.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}