{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __spreadArray } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { AbstractPureComponent2, Classes, Position } from \"../../common\";\nimport { TOASTER_CREATE_NULL, TOASTER_MAX_TOASTS_INVALID, TOASTER_WARN_INLINE } from \"../../common/errors\";\nimport { ESCAPE } from \"../../common/keys\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { isNodeEnv } from \"../../common/utils\";\nimport { Overlay } from \"../overlay/overlay\";\nimport { Toast } from \"./toast\";\nvar Toaster = /** @class */function (_super) {\n  __extends(Toaster, _super);\n  function Toaster() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.state = {\n      toasts: []\n    };\n    // auto-incrementing identifier for un-keyed toasts\n    _this.toastId = 0;\n    _this.renderToast = function (toast) {\n      return React.createElement(Toast, __assign({}, toast, {\n        onDismiss: _this.getDismissHandler(toast)\n      }));\n    };\n    _this.getDismissHandler = function (toast) {\n      return function (timeoutExpired) {\n        _this.dismiss(toast.key, timeoutExpired);\n      };\n    };\n    _this.handleClose = function (e) {\n      // NOTE that `e` isn't always a KeyboardEvent but that's the only type we care about\n      // HACKHACK: https://github.com/palantir/blueprint/issues/4165\n      /* eslint-disable-next-line deprecation/deprecation */\n      if (e.which === ESCAPE) {\n        _this.clear();\n      }\n    };\n    return _this;\n  }\n  /**\n   * Create a new `Toaster` instance that can be shared around your application.\n   * The `Toaster` will be rendered into a new element appended to the given container.\n   */\n  Toaster.create = function (props, container) {\n    if (container === void 0) {\n      container = document.body;\n    }\n    if (props != null && props.usePortal != null && !isNodeEnv(\"production\")) {\n      console.warn(TOASTER_WARN_INLINE);\n    }\n    var containerElement = document.createElement(\"div\");\n    container.appendChild(containerElement);\n    var toaster = ReactDOM.render(React.createElement(Toaster, __assign({}, props, {\n      usePortal: false\n    })), containerElement);\n    if (toaster == null) {\n      throw new Error(TOASTER_CREATE_NULL);\n    }\n    return toaster;\n  };\n  Toaster.prototype.show = function (props, key) {\n    if (this.props.maxToasts) {\n      // check if active number of toasts are at the maxToasts limit\n      this.dismissIfAtLimit();\n    }\n    var options = this.createToastOptions(props, key);\n    if (key === undefined || this.isNewToastKey(key)) {\n      this.setState(function (prevState) {\n        return {\n          toasts: __spreadArray([options], prevState.toasts, true)\n        };\n      });\n    } else {\n      this.setState(function (prevState) {\n        return {\n          toasts: prevState.toasts.map(function (t) {\n            return t.key === key ? options : t;\n          })\n        };\n      });\n    }\n    return options.key;\n  };\n  Toaster.prototype.dismiss = function (key, timeoutExpired) {\n    if (timeoutExpired === void 0) {\n      timeoutExpired = false;\n    }\n    this.setState(function (_a) {\n      var toasts = _a.toasts;\n      return {\n        toasts: toasts.filter(function (t) {\n          var _a;\n          var matchesKey = t.key === key;\n          if (matchesKey) {\n            (_a = t.onDismiss) === null || _a === void 0 ? void 0 : _a.call(t, timeoutExpired);\n          }\n          return !matchesKey;\n        })\n      };\n    });\n  };\n  Toaster.prototype.clear = function () {\n    this.state.toasts.forEach(function (t) {\n      var _a;\n      return (_a = t.onDismiss) === null || _a === void 0 ? void 0 : _a.call(t, false);\n    });\n    this.setState({\n      toasts: []\n    });\n  };\n  Toaster.prototype.getToasts = function () {\n    return this.state.toasts;\n  };\n  Toaster.prototype.render = function () {\n    var classes = classNames(Classes.TOAST_CONTAINER, this.getPositionClasses(), this.props.className);\n    return React.createElement(Overlay, {\n      autoFocus: this.props.autoFocus,\n      canEscapeKeyClose: this.props.canEscapeKeyClear,\n      canOutsideClickClose: false,\n      className: classes,\n      enforceFocus: false,\n      hasBackdrop: false,\n      isOpen: this.state.toasts.length > 0 || this.props.children != null,\n      onClose: this.handleClose,\n      shouldReturnFocusOnClose: false,\n      // $pt-transition-duration * 3 + $pt-transition-duration / 2\n      transitionDuration: 350,\n      transitionName: Classes.TOAST,\n      usePortal: this.props.usePortal\n    }, this.state.toasts.map(this.renderToast, this), this.props.children);\n  };\n  Toaster.prototype.validateProps = function (_a) {\n    var maxToasts = _a.maxToasts;\n    // maximum number of toasts should not be a number less than 1\n    if (maxToasts !== undefined && maxToasts < 1) {\n      throw new Error(TOASTER_MAX_TOASTS_INVALID);\n    }\n  };\n  Toaster.prototype.isNewToastKey = function (key) {\n    return this.state.toasts.every(function (toast) {\n      return toast.key !== key;\n    });\n  };\n  Toaster.prototype.dismissIfAtLimit = function () {\n    if (this.state.toasts.length === this.props.maxToasts) {\n      // dismiss the oldest toast to stay within the maxToasts limit\n      this.dismiss(this.state.toasts[this.state.toasts.length - 1].key);\n    }\n  };\n  Toaster.prototype.createToastOptions = function (props, key) {\n    if (key === void 0) {\n      key = \"toast-\".concat(this.toastId++);\n    }\n    // clone the object before adding the key prop to avoid leaking the mutation\n    return __assign(__assign({}, props), {\n      key: key\n    });\n  };\n  Toaster.prototype.getPositionClasses = function () {\n    var positions = this.props.position.split(\"-\");\n    // NOTE that there is no -center class because that's the default style\n    return __spreadArray(__spreadArray([], positions.map(function (p) {\n      return \"\".concat(Classes.TOAST_CONTAINER, \"-\").concat(p.toLowerCase());\n    }), true), [\"\".concat(Classes.TOAST_CONTAINER, \"-\").concat(this.props.usePortal ? \"in-portal\" : \"inline\")], false);\n  };\n  Toaster.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".Toaster\");\n  Toaster.defaultProps = {\n    autoFocus: false,\n    canEscapeKeyClear: true,\n    position: Position.TOP,\n    usePortal: true\n  };\n  return Toaster;\n}(AbstractPureComponent2);\nexport { Toaster };\nexport var OverlayToaster = Toaster;","map":{"version":3,"mappings":"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","names":["classNames","React","ReactDOM","AbstractPureComponent2","Classes","Position","TOASTER_CREATE_NULL","TOASTER_MAX_TOASTS_INVALID","TOASTER_WARN_INLINE","ESCAPE","DISPLAYNAME_PREFIX","isNodeEnv","Overlay","Toast","__extends","_this","toasts","toast","onDismiss","getDismissHandler","timeoutExpired","dismiss","key","e","which","clear","Toaster","props","container","document","body","usePortal","console","warn","containerElement","createElement","appendChild","toaster","render","Error","maxToasts","dismissIfAtLimit","options","createToastOptions","undefined","isNewToastKey","setState","prevState","map","t","_a","filter","matchesKey","state","forEach","classes","TOAST_CONTAINER","getPositionClasses","className","autoFocus","canEscapeKeyClose","canEscapeKeyClear","canOutsideClickClose","enforceFocus","hasBackdrop","isOpen","length","children","onClose","handleClose","shouldReturnFocusOnClose","transitionDuration","transitionName","TOAST","renderToast","every","toastId","positions","position","split","p","toLowerCase","TOP","OverlayToaster"],"sourceRoot":"","sources":["../../../../src/components/toast/toaster.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}