{"ast":null,"code":"/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { AbstractPureComponent2 } from \"../../common\";\nimport { DISABLED, FILL, HTML_SELECT, LARGE, MINIMAL } from \"../../common/classes\";\nimport { Icon } from \"../icon/icon\";\n// this component is simple enough that tests would be purely tautological.\n/* istanbul ignore next */\nvar HTMLSelect = /** @class */function (_super) {\n  __extends(HTMLSelect, _super);\n  function HTMLSelect() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  HTMLSelect.prototype.render = function () {\n    var _a;\n    var _b = this.props,\n      className = _b.className,\n      disabled = _b.disabled,\n      elementRef = _b.elementRef,\n      fill = _b.fill,\n      iconProps = _b.iconProps,\n      large = _b.large,\n      minimal = _b.minimal,\n      _c = _b.options,\n      options = _c === void 0 ? [] : _c,\n      htmlProps = __rest(_b, [\"className\", \"disabled\", \"elementRef\", \"fill\", \"iconProps\", \"large\", \"minimal\", \"options\"]);\n    var classes = classNames(HTML_SELECT, (_a = {}, _a[DISABLED] = disabled, _a[FILL] = fill, _a[LARGE] = large, _a[MINIMAL] = minimal, _a), className);\n    var optionChildren = options.map(function (option) {\n      var props = typeof option === \"object\" ? option : {\n        value: option\n      };\n      return React.createElement(\"option\", __assign({}, props, {\n        key: props.value,\n        children: props.label || props.value\n      }));\n    });\n    return React.createElement(\"div\", {\n      className: classes\n    }, React.createElement(\"select\", __assign({\n      disabled: disabled,\n      ref: elementRef,\n      value: this.props.value\n    }, htmlProps, {\n      multiple: false\n    }), optionChildren, htmlProps.children), React.createElement(Icon, __assign({\n      icon: \"double-caret-vertical\",\n      title: \"Open dropdown\"\n    }, iconProps)));\n  };\n  return HTMLSelect;\n}(AbstractPureComponent2);\nexport { HTMLSelect };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAASC,sBAAsB,QAAQ,cAAc;AACrD,SAASC,QAAQ,EAAEC,IAAI,EAAEC,WAAW,EAAEC,KAAK,EAAEC,OAAO,QAAQ,sBAAsB;AAElF,SAASC,IAAI,QAAmB,cAAc;AA2C9C;AACA;AACA;EAAgCC;EAAhC;;EAuCA;EAtCWC,2BAAM,GAAb;;IACI,IAAMC,KAUF,IAAI,CAACC,KAAK;MATVC,SAAS;MACTC,QAAQ;MACRC,UAAU;MACVC,IAAI;MACJC,SAAS;MACTC,KAAK;MACLC,OAAO;MACPC,eAAY;MAAZC,OAAO,mBAAG,EAAE;MACTC,SAAS,cATV,2FAUL,CAAa;IACd,IAAMC,OAAO,GAAGvB,UAAU,CACtBK,WAAW,YAEPmB,GAACrB,QAAQ,IAAGW,QAAQ,EACpBU,GAACpB,IAAI,IAAGY,IAAI,EACZQ,GAAClB,KAAK,IAAGY,KAAK,EACdM,GAACjB,OAAO,IAAGY,OAAO,OAEtBN,SAAS,CACZ;IAED,IAAMY,cAAc,GAAGJ,OAAO,CAACK,GAAG,CAAC,gBAAM;MACrC,IAAMd,KAAK,GAAgB,OAAOe,MAAM,KAAK,QAAQ,GAAGA,MAAM,GAAG;QAAEC,KAAK,EAAED;MAAM,CAAE;MAClF,OAAO1B,2CAAYW,KAAK;QAAEiB,GAAG,EAAEjB,KAAK,CAACgB,KAAK;QAAEE,QAAQ,EAAElB,KAAK,CAACmB,KAAK,IAAInB,KAAK,CAACgB;MAAK,GAAI;IACxF,CAAC,CAAC;IAEF,OACI3B;MAAKY,SAAS,EAAEU;IAAO,GACnBtB;MAAQa,QAAQ,EAAEA,QAAQ;MAAEkB,GAAG,EAAEjB,UAAU;MAAEa,KAAK,EAAE,IAAI,CAAChB,KAAK,CAACgB;IAAK,GAAMN,SAAS;MAAEW,QAAQ,EAAE;IAAK,IAC/FR,cAAc,EACdH,SAAS,CAACQ,QAAQ,CACd,EACT7B,oBAACO,IAAI;MAAC0B,IAAI,EAAC,uBAAuB;MAACC,KAAK,EAAC;IAAe,GAAKlB,SAAS,EAAI,CACxE;EAEd,CAAC;EACL,iBAAC;AAAD,CAAC,CAvC+Bf,sBAAsB","names":["classNames","React","AbstractPureComponent2","DISABLED","FILL","HTML_SELECT","LARGE","MINIMAL","Icon","__extends","HTMLSelect","_b","props","className","disabled","elementRef","fill","iconProps","large","minimal","_c","options","htmlProps","classes","_a","optionChildren","map","option","value","key","children","label","ref","multiple","icon","title"],"sourceRoot":"","sources":["../../../../src/components/html-select/htmlSelect.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}