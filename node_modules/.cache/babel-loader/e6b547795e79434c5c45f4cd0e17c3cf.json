{"ast":null,"code":"var _jsxFileName = \"/home/adrian/codefellows/401/todo-app/src/context/authContext.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport cookie from 'react-cookies';\nimport jwt_decode from 'jwt-decode';\nimport { useState, createContext, useEffect } from 'react';\nimport * as dotenv from 'dotenv';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// const testUsers = {\n//     Administrator: {\n//       password: 'admin',\n//       name: 'Administrator',\n//       token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiQWRtaW5pc3RyYXRvciIsInJvbGUiOiJhZG1pbiIsImNhcGFiaWxpdGllcyI6IlsnY3JlYXRlJywncmVhZCcsJ3VwZGF0ZScsJ2RlbGV0ZSddIiwiaWF0IjoxNTE2MjM5MDIyfQ.pAZXAlTmC8fPELk2xHEaP1mUhR8egg9TH5rCyqZhZkQ'\n//     },\n//     Editor: {\n//       password: 'editor',\n//       name: 'Editor',\n//       token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiRWRpdG9yIiwicm9sZSI6ImVkaXRvciIsImNhcGFiaWxpdGllcyI6IlsncmVhZCcsJ3VwZGF0ZSddIiwiaWF0IjoxNTE2MjM5MDIyfQ.3aDn3e2pf_J_1rZig8wj9RiT47Ae2Lw-AM-Nw4Tmy_s'\n//     },\n//     Writer: {\n//       password: 'writer',\n//       name: 'Writer',\n//       token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiV3JpdGVyIiwicm9sZSI6IndyaXRlciIsImNhcGFiaWxpdGllcyI6IlsnY3JlYXRlJ10iLCJpYXQiOjE1MTYyMzkwMjJ9.dmKh8m18mgQCCJp2xoh73HSOWprdwID32hZsXogLZ68'\n//     },\n//     User: {\n//       password: 'user',\n//       name: 'User',\n//       token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiVXNlciIsInJvbGUiOiJ1c2VyIiwiY2FwYWJpbGl0aWVzIjoiWydyZWFkJ10iLCJpYXQiOjE1MTYyMzkwMjJ9.WXYvIKLdPz_Mm0XDYSOJo298ftuBqqjTzbRvCpxa9Go'\n//     },\n//   };\n\nconst AuthContextProvider = function (props) {\n  _s();\n  let [loggedIn, setLoggedIn] = useState(false);\n  let [capabilities, setCapabilities] = useState([]);\n  let [error, setError] = useState(null);\n  let signUp = async (username, password) => {\n    let user = await fetch('http://localhost:3001/signup', {\n      method: 'POST',\n      body: JSON.stringify({\n        username: username,\n        password: password,\n        role: 'admin'\n      })\n    });\n    console.log(user);\n    // let parsedUser = JSON.parse(user);\n    // cookie.save('auth', parsedUser);\n    // setLoggedIn(true)\n    // setCapabilities(parsedUser.capabilities)\n  };\n\n  let login = async (username, password) => {\n    // const User = testUsers[username];\n\n    // if(User.password === password){\n\n    // } else {\n    //     setLoggedIn(false)\n    //     setCapabilities([]);\n    //     setError('bad creds');\n    // }\n  };\n  let validateToken = token => {\n    try {\n      let User = jwt_decode(token);\n      console.log(User);\n      setLoggedIn(true);\n      setCapabilities(User.capabilities);\n    } catch (e) {\n      setLoggedIn(false);\n      setCapabilities([]);\n      console.log('bad token');\n    }\n  };\n  let logout = () => {\n    setLoggedIn(false);\n    setCapabilities([]);\n  };\n  useEffect(() => {\n    // const cookieToken = cookie.load('auth');\n    // validateToken(cookieToken.token);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      loggedIn,\n      setLoggedIn,\n      capabilities,\n      setCapabilities,\n      error,\n      setError,\n      login,\n      logout,\n      signUp\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthContextProvider, \"TU4Y2/DY7MPBSgx+KLZQhA6AnPg=\");\n_c = AuthContextProvider;\nexport default AuthContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","cookie","jwt_decode","useState","createContext","useEffect","dotenv","AuthContext","AuthContextProvider","props","loggedIn","setLoggedIn","capabilities","setCapabilities","error","setError","signUp","username","password","user","fetch","method","body","JSON","stringify","role","console","log","login","validateToken","token","User","e","logout","children"],"sources":["/home/adrian/codefellows/401/todo-app/src/context/authContext.jsx"],"sourcesContent":["import React from 'react';\r\nimport cookie from 'react-cookies';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { useState, createContext, useEffect} from 'react';\r\nimport * as dotenv from 'dotenv'\r\n\r\nexport const AuthContext = createContext();\r\n\r\n// const testUsers = {\r\n//     Administrator: {\r\n//       password: 'admin',\r\n//       name: 'Administrator',\r\n//       token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiQWRtaW5pc3RyYXRvciIsInJvbGUiOiJhZG1pbiIsImNhcGFiaWxpdGllcyI6IlsnY3JlYXRlJywncmVhZCcsJ3VwZGF0ZScsJ2RlbGV0ZSddIiwiaWF0IjoxNTE2MjM5MDIyfQ.pAZXAlTmC8fPELk2xHEaP1mUhR8egg9TH5rCyqZhZkQ'\r\n//     },\r\n//     Editor: {\r\n//       password: 'editor',\r\n//       name: 'Editor',\r\n//       token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiRWRpdG9yIiwicm9sZSI6ImVkaXRvciIsImNhcGFiaWxpdGllcyI6IlsncmVhZCcsJ3VwZGF0ZSddIiwiaWF0IjoxNTE2MjM5MDIyfQ.3aDn3e2pf_J_1rZig8wj9RiT47Ae2Lw-AM-Nw4Tmy_s'\r\n//     },\r\n//     Writer: {\r\n//       password: 'writer',\r\n//       name: 'Writer',\r\n//       token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiV3JpdGVyIiwicm9sZSI6IndyaXRlciIsImNhcGFiaWxpdGllcyI6IlsnY3JlYXRlJ10iLCJpYXQiOjE1MTYyMzkwMjJ9.dmKh8m18mgQCCJp2xoh73HSOWprdwID32hZsXogLZ68'\r\n//     },\r\n//     User: {\r\n//       password: 'user',\r\n//       name: 'User',\r\n//       token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiVXNlciIsInJvbGUiOiJ1c2VyIiwiY2FwYWJpbGl0aWVzIjoiWydyZWFkJ10iLCJpYXQiOjE1MTYyMzkwMjJ9.WXYvIKLdPz_Mm0XDYSOJo298ftuBqqjTzbRvCpxa9Go'\r\n//     },\r\n//   };\r\n\r\n\r\n\r\n  const AuthContextProvider = function (props){\r\n    let [loggedIn, setLoggedIn] = useState(false);\r\n    let [capabilities, setCapabilities] = useState([]);\r\n    let [error, setError] = useState(null);\r\n\r\n    let signUp = async (username, password) => {\r\n\r\n      let user = await fetch('http://localhost:3001/signup', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          username: username,\r\n          password: password,\r\n          role: 'admin',\r\n        })\r\n      })\r\n      console.log(user)\r\n      // let parsedUser = JSON.parse(user);\r\n      // cookie.save('auth', parsedUser);\r\n      // setLoggedIn(true)\r\n      // setCapabilities(parsedUser.capabilities)\r\n    }\r\n\r\n    let login = async (username, password) => {\r\n        // const User = testUsers[username];\r\n\r\n        // if(User.password === password){\r\n\r\n        // } else {\r\n        //     setLoggedIn(false)\r\n        //     setCapabilities([]);\r\n        //     setError('bad creds');\r\n        // }\r\n      }\r\n    \r\n      let validateToken = (token) => {\r\n        try{\r\n            let User = jwt_decode(token)\r\n            console.log(User)\r\n            setLoggedIn(true)\r\n            setCapabilities(User.capabilities)\r\n        } catch(e){\r\n            setLoggedIn(false)\r\n            setCapabilities([]);\r\n            console.log('bad token');\r\n        }\r\n      }\r\n\r\n      let logout = () => {\r\n        setLoggedIn(false)\r\n        setCapabilities([]);\r\n      }\r\n\r\n      useEffect(() => {\r\n        // const cookieToken = cookie.load('auth');\r\n        // validateToken(cookieToken.token);\r\n      }, [])\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ loggedIn, setLoggedIn, capabilities, setCapabilities, error, setError, login, logout, signUp }}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n  }\r\n\r\n  export default AuthContextProvider;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,QAAQ,EAAEC,aAAa,EAAEC,SAAS,QAAO,OAAO;AACzD,OAAO,KAAKC,MAAM,MAAM,QAAQ;AAAA;AAEhC,OAAO,MAAMC,WAAW,gBAAGH,aAAa,EAAE;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIE,MAAMI,mBAAmB,GAAG,UAAUC,KAAK,EAAC;EAAA;EAC1C,IAAI,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,IAAI,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,IAAI,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEtC,IAAIa,MAAM,GAAG,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAEzC,IAAIC,IAAI,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;MACrDC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBP,QAAQ,EAAEA,QAAQ;QAClBC,QAAQ,EAAEA,QAAQ;QAClBO,IAAI,EAAE;MACR,CAAC;IACH,CAAC,CAAC;IACFC,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;IACjB;IACA;IACA;IACA;EACF,CAAC;;EAED,IAAIS,KAAK,GAAG,OAAOX,QAAQ,EAAEC,QAAQ,KAAK;IACtC;;IAEA;;IAEA;IACA;IACA;IACA;IACA;EAAA,CACD;EAED,IAAIW,aAAa,GAAIC,KAAK,IAAK;IAC7B,IAAG;MACC,IAAIC,IAAI,GAAG7B,UAAU,CAAC4B,KAAK,CAAC;MAC5BJ,OAAO,CAACC,GAAG,CAACI,IAAI,CAAC;MACjBpB,WAAW,CAAC,IAAI,CAAC;MACjBE,eAAe,CAACkB,IAAI,CAACnB,YAAY,CAAC;IACtC,CAAC,CAAC,OAAMoB,CAAC,EAAC;MACNrB,WAAW,CAAC,KAAK,CAAC;MAClBE,eAAe,CAAC,EAAE,CAAC;MACnBa,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IAC5B;EACF,CAAC;EAED,IAAIM,MAAM,GAAG,MAAM;IACjBtB,WAAW,CAAC,KAAK,CAAC;IAClBE,eAAe,CAAC,EAAE,CAAC;EACrB,CAAC;EAEDR,SAAS,CAAC,MAAM;IACd;IACA;EAAA,CACD,EAAE,EAAE,CAAC;EAER,oBACI,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAEK,QAAQ;MAAEC,WAAW;MAAEC,YAAY;MAAEC,eAAe;MAAEC,KAAK;MAAEC,QAAQ;MAAEa,KAAK;MAAEK,MAAM;MAAEjB;IAAO,CAAE;IAAA,UACzHP,KAAK,CAACyB;EAAQ;IAAA;IAAA;IAAA;EAAA,QACI;AAE7B,CAAC;AAAA,GA9DK1B,mBAAmB;AAAA,KAAnBA,mBAAmB;AAgEzB,eAAeA,mBAAmB;AAAC;AAAA"},"metadata":{},"sourceType":"module"}