{"ast":null,"code":"var _jsxFileName = \"/home/adrian/codefellows/401/todo-app/src/components/todo/Header.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect } from 'react';\nimport { ListContext } from '../../context/listContex';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  let context = useContext(ListContext);\n  let incomplete = context.incomplete;\n  let list = context.list;\n  let setIncomplete = context.setIncomplete;\n  useEffect(() => {\n    let incompleteCount = list.filter(item => !item.complete).length;\n    setIncomplete(incompleteCount);\n    document.title = `To Do List: ${incomplete}`;\n  }, [list]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"To Do List: \", incomplete, \" items pending\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Header, \"wqnYpdjMkT3eDhbBjwDmfBO/TFg=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["useContext","useEffect","ListContext","Header","context","incomplete","list","setIncomplete","incompleteCount","filter","item","complete","length","document","title"],"sources":["/home/adrian/codefellows/401/todo-app/src/components/todo/Header.js"],"sourcesContent":["import { useContext, useEffect } from 'react';\r\nimport { ListContext } from '../../context/listContex';\r\n\r\nconst Header = () => {\r\n\r\n    let context = useContext(ListContext);\r\n    let incomplete = context.incomplete;\r\n    let list = context.list;\r\n    let setIncomplete = context.setIncomplete;\r\n\r\n    useEffect(() => {\r\n        let incompleteCount = list.filter(item => !item.complete).length;\r\n        setIncomplete(incompleteCount);\r\n        document.title = `To Do List: ${incomplete}`;\r\n      }, [list]);\r\n\r\n    return (<>\r\n      <header>\r\n        <h1>To Do List: {incomplete} items pending</h1>\r\n      </header>\r\n    </>)\r\n}\r\n\r\nexport default Header;"],"mappings":";;AAAA,SAASA,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7C,SAASC,WAAW,QAAQ,0BAA0B;AAAC;AAAA;AAEvD,MAAMC,MAAM,GAAG,MAAM;EAAA;EAEjB,IAAIC,OAAO,GAAGJ,UAAU,CAACE,WAAW,CAAC;EACrC,IAAIG,UAAU,GAAGD,OAAO,CAACC,UAAU;EACnC,IAAIC,IAAI,GAAGF,OAAO,CAACE,IAAI;EACvB,IAAIC,aAAa,GAAGH,OAAO,CAACG,aAAa;EAEzCN,SAAS,CAAC,MAAM;IACZ,IAAIO,eAAe,GAAGF,IAAI,CAACG,MAAM,CAACC,IAAI,IAAI,CAACA,IAAI,CAACC,QAAQ,CAAC,CAACC,MAAM;IAChEL,aAAa,CAACC,eAAe,CAAC;IAC9BK,QAAQ,CAACC,KAAK,GAAI,eAAcT,UAAW,EAAC;EAC9C,CAAC,EAAE,CAACC,IAAI,CAAC,CAAC;EAEZ,oBAAQ;IAAA,uBACN;MAAA,uBACE;QAAA,2BAAiBD,UAAU;MAAA;QAAA;QAAA;QAAA;MAAA;IAAoB;MAAA;MAAA;MAAA;IAAA;EACxC,iBACR;AACP,CAAC;AAAA,GAlBKF,MAAM;AAAA,KAANA,MAAM;AAoBZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module"}