{"ast":null,"code":"/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __extends } from \"tslib\";\nimport { ResizeObserver } from \"@juggle/resize-observer\";\nimport * as React from \"react\";\nimport { AbstractPureComponent2, DISPLAYNAME_PREFIX } from \"@blueprintjs/core\";\nvar ResizeSensor2 = /** @class */function (_super) {\n  __extends(ResizeSensor2, _super);\n  function ResizeSensor2() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.targetRef = React.createRef();\n    _this.prevElement = undefined;\n    _this.observer = new ResizeObserver(function (entries) {\n      var _a, _b;\n      return (_b = (_a = _this.props).onResize) === null || _b === void 0 ? void 0 : _b.call(_a, entries);\n    });\n    return _this;\n  }\n  ResizeSensor2.prototype.render = function () {\n    var onlyChild = React.Children.only(this.props.children);\n    // if we're provided a ref to the child already, we don't need to attach one ourselves\n    if (this.props.targetRef !== undefined) {\n      return onlyChild;\n    }\n    return React.cloneElement(onlyChild, {\n      ref: this.targetRef\n    });\n  };\n  ResizeSensor2.prototype.componentDidMount = function () {\n    this.observeElement();\n  };\n  ResizeSensor2.prototype.componentDidUpdate = function (prevProps) {\n    this.observeElement(this.props.observeParents !== prevProps.observeParents);\n  };\n  ResizeSensor2.prototype.componentWillUnmount = function () {\n    this.observer.disconnect();\n  };\n  /**\n   * Observe the DOM element, if defined and different from the currently\n   * observed element. Pass `force` argument to skip element checks and always\n   * re-observe.\n   */\n  ResizeSensor2.prototype.observeElement = function (force) {\n    if (force === void 0) {\n      force = false;\n    }\n    if (!(this.targetRef.current instanceof Element)) {\n      // stop everything if not defined\n      this.observer.disconnect();\n      return;\n    }\n    if (this.targetRef.current === this.prevElement && !force) {\n      // quit if given same element -- nothing to update (unless forced)\n      return;\n    } else {\n      // clear observer list if new element\n      this.observer.disconnect();\n      // remember element reference for next time\n      this.prevElement = this.targetRef.current;\n    }\n    // observer callback is invoked immediately when observing new elements\n    this.observer.observe(this.targetRef.current);\n    if (this.props.observeParents) {\n      var parent_1 = this.targetRef.current.parentElement;\n      while (parent_1 != null) {\n        this.observer.observe(parent_1);\n        parent_1 = parent_1.parentElement;\n      }\n    }\n  };\n  ResizeSensor2.displayName = \"\".concat(DISPLAYNAME_PREFIX, \".ResizeSensor2\");\n  return ResizeSensor2;\n}(AbstractPureComponent2);\nexport { ResizeSensor2 };","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,SAASA,cAAc,QAA6B,yBAAyB;AAC7E,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAASC,sBAAsB,EAAEC,kBAAkB,QAAQ,mBAAmB;AAyC9E;EAAmCC;EAAnC;IAAA;IAGYC,eAAS,GAAGJ,KAAK,CAACK,SAAS,EAAe;IAE1CD,iBAAW,GAA4BE,SAAS;IAEhDF,cAAQ,GAAG,IAAIL,cAAc,CAAC,iBAAO;MAAA;MAAI,wBAAI,CAACQ,KAAK,EAACC,QAAQ,mDAAGC,OAAO,CAAC;IAAA,EAAC;;EA0DpF;EAxDWC,8BAAM,GAAb;IACI,IAAMC,SAAS,GAAGX,KAAK,CAACY,QAAQ,CAACC,IAAI,CAAC,IAAI,CAACN,KAAK,CAACO,QAAQ,CAAC;IAE1D;IACA,IAAI,IAAI,CAACP,KAAK,CAACQ,SAAS,KAAKT,SAAS,EAAE;MACpC,OAAOK,SAAS;;IAGpB,OAAOX,KAAK,CAACgB,YAAY,CAACL,SAAS,EAAE;MAAEM,GAAG,EAAE,IAAI,CAACF;IAAS,CAAE,CAAC;EACjE,CAAC;EAEML,yCAAiB,GAAxB;IACI,IAAI,CAACQ,cAAc,EAAE;EACzB,CAAC;EAEMR,0CAAkB,GAAzB,UAA0BS,SAA6B;IACnD,IAAI,CAACD,cAAc,CAAC,IAAI,CAACX,KAAK,CAACa,cAAc,KAAKD,SAAS,CAACC,cAAc,CAAC;EAC/E,CAAC;EAEMV,4CAAoB,GAA3B;IACI,IAAI,CAACW,QAAQ,CAACC,UAAU,EAAE;EAC9B,CAAC;EAED;;;;;EAKQZ,sCAAc,GAAtB,UAAuBa,KAAa;IAAb;MAAAA,aAAa;IAAA;IAChC,IAAI,EAAE,IAAI,CAACR,SAAS,CAACS,OAAO,YAAYC,OAAO,CAAC,EAAE;MAC9C;MACA,IAAI,CAACJ,QAAQ,CAACC,UAAU,EAAE;MAC1B;;IAGJ,IAAI,IAAI,CAACP,SAAS,CAACS,OAAO,KAAK,IAAI,CAACE,WAAW,IAAI,CAACH,KAAK,EAAE;MACvD;MACA;KACH,MAAM;MACH;MACA,IAAI,CAACF,QAAQ,CAACC,UAAU,EAAE;MAC1B;MACA,IAAI,CAACI,WAAW,GAAG,IAAI,CAACX,SAAS,CAACS,OAAO;;IAG7C;IACA,IAAI,CAACH,QAAQ,CAACM,OAAO,CAAC,IAAI,CAACZ,SAAS,CAACS,OAAO,CAAC;IAE7C,IAAI,IAAI,CAACjB,KAAK,CAACa,cAAc,EAAE;MAC3B,IAAIQ,QAAM,GAAG,IAAI,CAACb,SAAS,CAACS,OAAO,CAACK,aAAa;MACjD,OAAOD,QAAM,IAAI,IAAI,EAAE;QACnB,IAAI,CAACP,QAAQ,CAACM,OAAO,CAACC,QAAM,CAAC;QAC7BA,QAAM,GAAGA,QAAM,CAACC,aAAa;;;EAGzC,CAAC;EA/DanB,yBAAW,GAAG,UAAGR,kBAAkB,mBAAgB;EAgErE,oBAAC;CAAA,CAjEkCD,sBAAsB;SAA5CS,aAAa","names":["ResizeObserver","React","AbstractPureComponent2","DISPLAYNAME_PREFIX","__extends","_this","createRef","undefined","props","onResize","entries","ResizeSensor2","onlyChild","Children","only","children","targetRef","cloneElement","ref","observeElement","prevProps","observeParents","observer","disconnect","force","current","Element","prevElement","observe","parent_1","parentElement"],"sourceRoot":"","sources":["../../src/resizeSensor2.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}